//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input Asset/Player_Input_Action.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Player_Input_Action: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Player_Input_Action()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player_Input_Action"",
    ""maps"": [
        {
            ""name"": ""Move_Player_PC"",
            ""id"": ""0e25d65f-d82e-42ce-83e0-8f9a95ccc6a3"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""4a8837d9-0639-4b5f-b9cd-b29ae1abf625"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""bd696576-ac1b-4106-aa3b-338f4d592d96"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fly"",
                    ""type"": ""Button"",
                    ""id"": ""491db63f-8958-454b-b216-f9dc6713c6a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""eeb10d00-99c4-4960-881f-0498d46d426b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Defend"",
                    ""type"": ""Button"",
                    ""id"": ""0a70bf92-8dc6-49b1-b98f-646c68fd9135"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""bd152f32-d486-4c33-9296-2ed273d632be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0d1582d0-3ffc-476f-8729-6bf372d30c69"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf7cbfbb-356f-46b9-b390-09c2a0fe94eb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fb5df49-bf15-4ee6-91d7-6b365ed85971"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""001c4657-918a-4704-986b-fd9707a1ae93"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2ffe2fe6-861a-42fe-83b0-34c2a4b9b7f8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4da60a14-3652-4063-9f48-ca3c8b315607"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3fcf613b-8ee6-4747-8b0c-6758bce67b62"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5e18871c-af87-4725-ac5c-c2d980102b8c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""66d5b588-4098-465a-8e23-f54f90974d98"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1076e8bf-28f4-4812-89d7-41305842ef53"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aeaa5e98-261c-4776-88f8-da2e8cfdb734"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fly"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a40390b-9817-4cf3-90b9-1276dbfaeaae"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75cf9c7f-eafb-4c28-b97f-55d551ceb983"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Defend"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9c7d6dc-a6b5-452d-8cfb-ce10aeadca1e"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Move_Player_Mobile"",
            ""id"": ""b69b5f56-ebca-46d7-a367-91c2d28a109c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""b299b523-6eee-4890-b0f0-8daa1f9b6e6f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""faaee012-1410-4892-bd16-757430cd2416"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fly"",
                    ""type"": ""Button"",
                    ""id"": ""9f03601f-4962-4995-b061-0ff4133ed5ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""dbc74dbf-6a85-45d2-a68c-c17fb61e263c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Defend"",
                    ""type"": ""Button"",
                    ""id"": ""33b0bb2e-1c3f-4f14-9fa5-df7322f3ac5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""4b15af7a-d32a-4cf7-945c-1de5040bc3ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""53bb56c9-35a4-431f-b53b-a580a1c32164"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ceb4abba-7f25-4f9f-97a7-dfe71b4911c9"",
                    ""path"": ""<Touchscreen>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7f623574-fda5-4e63-8e80-fbc2fb609f4b"",
                    ""path"": ""<Touchscreen>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""777e25d7-8dba-4f24-91e3-0bc80bdd422c"",
                    ""path"": ""<Touchscreen>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""94ec2eb4-b19f-45cb-88e5-2351bf337b67"",
                    ""path"": ""<Touchscreen>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""af139d83-48b7-40e6-b803-7a7bd033ab25"",
                    ""path"": ""<Touchscreen>/touch0/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37bdfed8-762d-43b3-b76a-1e5fc660eaa4"",
                    ""path"": ""<Touchscreen>/touch2/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fly"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0ab1faf-a172-4842-a0aa-f1471c6bcf97"",
                    ""path"": ""<Touchscreen>/touch3/indirectTouch"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6b428fc-f3d8-4d7d-a88d-e631b4e96b4c"",
                    ""path"": ""<Touchscreen>/touch4/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Defend"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5870d0c-5f3a-444b-a792-f886533a7518"",
                    ""path"": ""<Touchscreen>/touch5/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Move_Player_PC
        m_Move_Player_PC = asset.FindActionMap("Move_Player_PC", throwIfNotFound: true);
        m_Move_Player_PC_Move = m_Move_Player_PC.FindAction("Move", throwIfNotFound: true);
        m_Move_Player_PC_Jump = m_Move_Player_PC.FindAction("Jump", throwIfNotFound: true);
        m_Move_Player_PC_Fly = m_Move_Player_PC.FindAction("Fly", throwIfNotFound: true);
        m_Move_Player_PC_Attack = m_Move_Player_PC.FindAction("Attack", throwIfNotFound: true);
        m_Move_Player_PC_Defend = m_Move_Player_PC.FindAction("Defend", throwIfNotFound: true);
        m_Move_Player_PC_Run = m_Move_Player_PC.FindAction("Run", throwIfNotFound: true);
        // Move_Player_Mobile
        m_Move_Player_Mobile = asset.FindActionMap("Move_Player_Mobile", throwIfNotFound: true);
        m_Move_Player_Mobile_Move = m_Move_Player_Mobile.FindAction("Move", throwIfNotFound: true);
        m_Move_Player_Mobile_Jump = m_Move_Player_Mobile.FindAction("Jump", throwIfNotFound: true);
        m_Move_Player_Mobile_Fly = m_Move_Player_Mobile.FindAction("Fly", throwIfNotFound: true);
        m_Move_Player_Mobile_Attack = m_Move_Player_Mobile.FindAction("Attack", throwIfNotFound: true);
        m_Move_Player_Mobile_Defend = m_Move_Player_Mobile.FindAction("Defend", throwIfNotFound: true);
        m_Move_Player_Mobile_Run = m_Move_Player_Mobile.FindAction("Run", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Move_Player_PC
    private readonly InputActionMap m_Move_Player_PC;
    private List<IMove_Player_PCActions> m_Move_Player_PCActionsCallbackInterfaces = new List<IMove_Player_PCActions>();
    private readonly InputAction m_Move_Player_PC_Move;
    private readonly InputAction m_Move_Player_PC_Jump;
    private readonly InputAction m_Move_Player_PC_Fly;
    private readonly InputAction m_Move_Player_PC_Attack;
    private readonly InputAction m_Move_Player_PC_Defend;
    private readonly InputAction m_Move_Player_PC_Run;
    public struct Move_Player_PCActions
    {
        private @Player_Input_Action m_Wrapper;
        public Move_Player_PCActions(@Player_Input_Action wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Move_Player_PC_Move;
        public InputAction @Jump => m_Wrapper.m_Move_Player_PC_Jump;
        public InputAction @Fly => m_Wrapper.m_Move_Player_PC_Fly;
        public InputAction @Attack => m_Wrapper.m_Move_Player_PC_Attack;
        public InputAction @Defend => m_Wrapper.m_Move_Player_PC_Defend;
        public InputAction @Run => m_Wrapper.m_Move_Player_PC_Run;
        public InputActionMap Get() { return m_Wrapper.m_Move_Player_PC; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Move_Player_PCActions set) { return set.Get(); }
        public void AddCallbacks(IMove_Player_PCActions instance)
        {
            if (instance == null || m_Wrapper.m_Move_Player_PCActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Move_Player_PCActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Fly.started += instance.OnFly;
            @Fly.performed += instance.OnFly;
            @Fly.canceled += instance.OnFly;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Defend.started += instance.OnDefend;
            @Defend.performed += instance.OnDefend;
            @Defend.canceled += instance.OnDefend;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
        }

        private void UnregisterCallbacks(IMove_Player_PCActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Fly.started -= instance.OnFly;
            @Fly.performed -= instance.OnFly;
            @Fly.canceled -= instance.OnFly;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Defend.started -= instance.OnDefend;
            @Defend.performed -= instance.OnDefend;
            @Defend.canceled -= instance.OnDefend;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
        }

        public void RemoveCallbacks(IMove_Player_PCActions instance)
        {
            if (m_Wrapper.m_Move_Player_PCActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMove_Player_PCActions instance)
        {
            foreach (var item in m_Wrapper.m_Move_Player_PCActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Move_Player_PCActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Move_Player_PCActions @Move_Player_PC => new Move_Player_PCActions(this);

    // Move_Player_Mobile
    private readonly InputActionMap m_Move_Player_Mobile;
    private List<IMove_Player_MobileActions> m_Move_Player_MobileActionsCallbackInterfaces = new List<IMove_Player_MobileActions>();
    private readonly InputAction m_Move_Player_Mobile_Move;
    private readonly InputAction m_Move_Player_Mobile_Jump;
    private readonly InputAction m_Move_Player_Mobile_Fly;
    private readonly InputAction m_Move_Player_Mobile_Attack;
    private readonly InputAction m_Move_Player_Mobile_Defend;
    private readonly InputAction m_Move_Player_Mobile_Run;
    public struct Move_Player_MobileActions
    {
        private @Player_Input_Action m_Wrapper;
        public Move_Player_MobileActions(@Player_Input_Action wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Move_Player_Mobile_Move;
        public InputAction @Jump => m_Wrapper.m_Move_Player_Mobile_Jump;
        public InputAction @Fly => m_Wrapper.m_Move_Player_Mobile_Fly;
        public InputAction @Attack => m_Wrapper.m_Move_Player_Mobile_Attack;
        public InputAction @Defend => m_Wrapper.m_Move_Player_Mobile_Defend;
        public InputAction @Run => m_Wrapper.m_Move_Player_Mobile_Run;
        public InputActionMap Get() { return m_Wrapper.m_Move_Player_Mobile; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Move_Player_MobileActions set) { return set.Get(); }
        public void AddCallbacks(IMove_Player_MobileActions instance)
        {
            if (instance == null || m_Wrapper.m_Move_Player_MobileActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Move_Player_MobileActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Fly.started += instance.OnFly;
            @Fly.performed += instance.OnFly;
            @Fly.canceled += instance.OnFly;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Defend.started += instance.OnDefend;
            @Defend.performed += instance.OnDefend;
            @Defend.canceled += instance.OnDefend;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
        }

        private void UnregisterCallbacks(IMove_Player_MobileActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Fly.started -= instance.OnFly;
            @Fly.performed -= instance.OnFly;
            @Fly.canceled -= instance.OnFly;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Defend.started -= instance.OnDefend;
            @Defend.performed -= instance.OnDefend;
            @Defend.canceled -= instance.OnDefend;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
        }

        public void RemoveCallbacks(IMove_Player_MobileActions instance)
        {
            if (m_Wrapper.m_Move_Player_MobileActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMove_Player_MobileActions instance)
        {
            foreach (var item in m_Wrapper.m_Move_Player_MobileActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Move_Player_MobileActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Move_Player_MobileActions @Move_Player_Mobile => new Move_Player_MobileActions(this);
    public interface IMove_Player_PCActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnFly(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnDefend(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
    }
    public interface IMove_Player_MobileActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnFly(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnDefend(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
    }
}
